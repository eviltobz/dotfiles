name: Manual deploy
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      env:
        description: DFB environment
        required: true
        type: choice
        options:
          - PROD
          - STAG
          - TEST
          - DEV
      region:
        description: DFB region
        required: true
        type: choice
        options:
          - eu-central-1
          - ap-northeast-1
      mode:
        description: Deployment mode
        required: false
        type: choice
        options:
          - dry
          - apply

env:
  DOCKER_IMAGE: ${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  run-deploy-script:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event.repository.name }}_cicd_${{ github.event.inputs.env }}
    timeout-minutes: 10
    steps:

      - name: Set variables - DEV
        if: github.event.inputs.env == 'DEV'
        run: |
          echo "AWS_ACCOUNT=714306903482" >> $GITHUB_ENV
          echo "NR_API_KEY=${{ secrets.GLOBAL_NEWRELIC_COMPREM_DEV_PERSONAL_API_KEY }}" >> $GITHUB_ENV

      - name: Set variables - TEST
        if: github.event.inputs.env == 'TEST'
        run: |
          echo "AWS_ACCOUNT=931209822253" >> $GITHUB_ENV
          echo "NR_API_KEY=${{ secrets.GLOBAL_NEWRELIC_COMPREM_TEST_PERSONAL_API_KEY }}" >> $GITHUB_ENV

      - name: Set variables - STAG
        if: github.event.inputs.env == 'STAG'
        run: |
          echo "AWS_ACCOUNT=175901229741" >> $GITHUB_ENV
          echo "NR_API_KEY=${{ secrets.GLOBAL_NEWRELIC_COMPREM_STAGE_PERSONAL_API_KEY }}" >> $GITHUB_ENV

      - name: Set variables - PROD
        if: github.event.inputs.env == 'PROD'
        run: |
          echo "AWS_ACCOUNT=556548779709" >> $GITHUB_ENV
          echo "NR_API_KEY=${{ secrets.GLOBAL_NEWRELIC_COMPREM_PROD_PERSONAL_API_KEY }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }} -f ./scripts/Dockerfile .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/automation-gha-ci

      - name: Validate/Deploy changes
        run: >
          docker run --rm
          -e NEW_RELIC_API_KEY=${{ env.NR_API_KEY }}
          -e AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
          -e AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}
          -e AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
          ${{ env.DOCKER_IMAGE }} ${{ github.event.inputs.env }} ${{ github.event.inputs.region }} ${{ github.event.inputs.mode }}
